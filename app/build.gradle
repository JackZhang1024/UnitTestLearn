apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.lucky.unittestlearn"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        // InstrumentTest必须添加的配置
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        jackOptions.enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {

    }

    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:' + rootProject.supportLibVersion
    // App's dependencies, including test
    compile 'com.android.support:support-annotations:' + rootProject.supportLibVersion
    compile 'com.google.guava:guava:18.0'
    // Testing-only dependencies
    // Testing-only dependencies
    // Force usage of support annotations in the test app, since it is internally used by the runner module.
    androidTestCompile 'com.android.support:support-annotations:' + rootProject.supportLibVersion
    androidTestCompile 'com.android.support.test:runner:' + rootProject.runnerVersion
    androidTestCompile 'com.android.support.test:rules:' + rootProject.rulesVersion
    androidTestCompile 'com.android.support.test.espresso:espresso-core:' + rootProject.espressoVersion
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:' + rootProject.espressoVersion) {
        transitive false
    }
    androidTestCompile 'com.android.support.test.espresso:espresso-web:' + rootProject.espressoVersion
    // Espresso IdlingResource 延迟数据加载测试
    compile 'com.android.support.test.espresso:espresso-idling-resource:' + rootProject.espressoVersion
    // 用来配合espressos使用
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    // Uiautomator espresso和uiautomator的区别在于
    // espresso 只能在本App内执行测试操作 而Uiautomator能够在其他的App也能执行测试操作
    // UI Automator仅支持Android 4.3(API Level 18)及以上版本
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
    // 利用Robolectric进行测试
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.0'
    testCompile('org.robolectric:robolectric:3.0-rc2') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    // 利用Mock进行模拟一个对象进行操作
    // testCompile 和 androidTestCompile有区别吗
    testCompile 'org.mockito:mockito-core:1.10.19'
    compile 'com.android.support:recyclerview-v7:' + rootProject.supportLibVersion
}
